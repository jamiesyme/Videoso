<!doctype html>

<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Videoso</title>

		<!-- Video.js CSS -->
		<link rel="stylesheet" href="http://vjs.zencdn.net/6.2.4/video-js.css">

		<!-- Bootstrap CSS -->
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
		<link rel="stylesheet" href="/f/bootstrap-callout.css">

		<!-- Videoso CSS -->
		<link rel="stylesheet" href="/f/videoso.css">
	</head>

	<body>
		{{template "header"}}
		<div class="container">
			<div class="row">
				<section class="col-sm-6">
					<h1>Introduction</h1>
					<p>This is an early prototype of Videoso, a video streaming platform.</p>
					<p>When a new video is uploaded, it will be processed as follows:</p>
					<ol>
						<li>Transcode the video into various resolutions (320p, <s>480p</s>, <s>720p</s>, and <s>1080p</s>) and various bitrates using <a href="https://ffmpeg.org/">FFmpeg</a>.</li>
						<li>Generate the MPEG-DASH files required for video streaming using the transcoded video files and <a href="https://gpac.wp.imt.fr/mp4box/">MP4Box</a>.</li>
						<li>Upload the MPEG-DASH files to <a href="https://aws.amazon.com/s3/">Amazon S3</a>, and save the video information to <a href="https://www.postgresql.org/">Postgres</a>.</li>
					</ol>
					<p>For more details, check out the <a href="https://github.com/jamiesyme/videoso">repo on Github</a>.</p>
					<p>This website is still in it's infancy. In the near future I'm going to be working on:</p>
					<ul>
						<li>users;</li>
						<li>video search;</li>
						<li>tag-based subscriptions;</li>
						<li>and improved video processing performance (processing one video on multiple servers simultaneously would be interesting...)</li>
					</ul>
				</section>
				<section class="col-sm-6">
					<h1>Upload</h1>
					<div class="bs-callout bs-callout-warning">
						<h4>Videos are public</h4>
						Any video uploaded will be hosted publicly on this website for anyone to see, and it can only be removed by an administrator. Do not upload anything that you wouldn't want the internet to see.
					</div>
					<div class="bs-callout bs-callout-warning">
						<h4>Videos may be deleted</h4>
						This website is still an early prototype, and as such, is not stable. Don't be surprised if the videos you uploaded last week suddenly disappear.
					</div>
					<form id="uploadForm" class="form-horizontal">
						<div class="form-group ">
							<label for="videoTitleInput" class="col-sm-2 control-label">Title</label>
							<div class="col-sm-10">
								<input type="text" maxlength="100" required name="title" id="videoTitleInput" class="form-control" placeholder="Title">
								<p class="help-block">Max 100 characters.</p>
							</div>
						</div>
						<div class="form-group">
							<label for="videoFileInput" class="col-sm-2 control-label">File</label>
							<div class="col-sm-10">
								<input type="file" accept="video/*" required name="videoFile" id="videoFileInput">
								<p class="help-block">Max 100 MB. Supported formats: mp4.</p>
							</div>
						</div>
						<div class="form-group">
							<div class="col-sm-offset-2 col-sm-10">
								<input type="submit" id="videoSubmit" class="btn btn-primary" value="Upload">
							</div>
						</div>
					</form>
				</section>
			</div>
		</div>
		<section class="container">
			<h1>Videos</h1>
			<ul id="videoList" class="row list-unstyled"></ul>
		</section>

		<!-- Video.js JS -->
		<script src="http://vjs.zencdn.net/6.2.4/video.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/dashjs/2.5.0/dash.all.debug.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/videojs-contrib-dash/2.9.1/videojs-dash.js"></script>

		<!-- jQuery -->
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

		<!-- Bootstrap JS -->
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

		<!-- Videoso JS -->
		{{template "js-helpers"}}
		<script src="/f/authentication.js"></script>
		<script src="/f/header.js"></script>
		<script>
		function prependVideoToList(video) {
			var $li = $('<li>')
				.addClass('col-sm-6')
				.prependTo('#videoList');
			$('#videoList > div.clearfix').remove();
			$('#videoList li:nth-child(2n)').after(
				$('<div>')
					.addClass('clearfix')
					.addClass('hidden-xs')
			);
			var docId = 'v_' + video.videoId;
			$('<video>')
				.attr('id', docId)
				.attr('controls', true)
				.attr('data-setup', '{"fluid": true}')
				.addClass('video-js')
				.addClass('vjs-default-skin')
				.addClass('vjs-big-play-centered')
				.appendTo($li);
			$('<h2>')
				.text(video.title)
				.appendTo($li);
			var player = videojs(docId);
			player.src({
				src: video.videoMpdUrl,
				type: 'application/dash+xml'
			});
		}
		$('#videoFileInput').on('change', function(e) {
			var sizeLimit = 100 * Math.pow(2, 20);
			var files = e.currentTarget.files;
			if (files.length > 0 && files[0].size > sizeLimit) {
				alert('Video file is too large (> 100 MB).');
				$(e.currentTarget).val('');
			}
		});
		$('#uploadForm').submit(function(e) {
			e.preventDefault();

			function lockForm() {
				$('#videoSubmit')
					.prop('disabled', true)
					.val('Uploading...');
			}
			function unlockForm() {
				$('#videoSubmit')
					.prop('disabled', false)
					.val('Upload');
			}

			lockForm();
			var formData = new FormData($('#uploadForm')[0]);
			$.ajax({
				url: 'http://dev-videoso:8001/videos',
				type: 'post',
				data: formData,
				processData: false,
				contentType: false,
				success: function(data) {
					$('#uploadForm')[0].reset();
					unlockForm();
					prependVideoToList(data.video);
				},
				error: function() {
					alert('Upload failed. Please try again later.');
					unlockForm();
				}
			});
		});
		$.getJSON('http://dev-videoso:8001/videos')
			.done(function(data) {
				data.videos.reverse();
				data.videos.forEach(prependVideoToList);
			})
			.fail(function(jqxhr, textStatus, error) {
				var err = textStatus + ", " + error;
				console.log("Failed to request videos: " + err);
			});
		</script>
	</body>
</html>
